datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Usuarios {
  id              String              @id @default(uuid())
  correo          String              @unique
  nombre          String
  telefono        String
  clave_ine       String
  edad            Int?
  sexo            String?
  estatura        Float?
  peso            Float?
  ejercicio_semanal Int?
  reservas        Reserva[]           
  reservasHechas  Int                 @default(0)
  faltas          Int                 @default(0)
  rol             String
  clave           String
  centros         CentroDeportivo[]   @relation("PersonalCentro") 
  avatarUrl       String?             // Campo nuevo para avatar de usuario
  createdAt       DateTime            @default(now()) // Campo nuevo
  updatedAt       DateTime            @updatedAt      // Campo nuevo
}

model CentroDeportivo {
  id              String              @id @default(uuid())
  nombre          String
  ubicacion       String
  imagenUrl       String?             // Campo nuevo para la imagen del centro
  canchas         Canchas[]           
  reservas        Reserva[]           
  personal        Usuarios[]          @relation("PersonalCentro")
  createdAt       DateTime            @default(now()) // Campo nuevo
  updatedAt       DateTime            @updatedAt      // Campo nuevo
  
  // Metadata de la imagen (opcional)
  imagenNombre    String?             // Nombre original del archivo
  imagenTamaño    Int?               // Tamaño en bytes
  imagenTipo      String?            // Tipo MIME (ej. "image/jpeg")
}

model Canchas {
  id              String              @id @default(uuid())
  nombre          String
  deporte         String
  alumbrado       Boolean         
  jugadores       Int
  imagenUrl       String?             // Campo nuevo para imagen de cancha
  centroDeportivo CentroDeportivo     @relation(fields: [centroDeportivoId], references: [id])
  centroDeportivoId String
  reservas        Reserva[]           
  createdAt       DateTime            @default(now()) // Campo nuevo
  updatedAt       DateTime            @updatedAt      // Campo nuevo
}

model Reserva {
  id                String            @id @default(uuid())
  fecha             DateTime
  horaInicio        DateTime
  horaFin           DateTime
  centroDeportivo   CentroDeportivo   @relation(fields: [centroDeportivoId], references: [id])
  centroDeportivoId String
  cancha            Canchas           @relation(fields: [canchaId], references: [id])
  canchaId          String
  reservador        Usuarios           @relation(fields: [reservadorId], references: [id]) 
  reservadorId      String
  objetosRentados   ObjetoRenta[]
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
}

model ObjetoRenta {
  id          String    @id @default(uuid())
  nombre      String    
  cantidad    Int       
  imagenUrl   String?   // Campo nuevo para imagen del objeto
  reserva     Reserva   @relation(fields: [reservaId], references: [id])
  reservaId   String
  createdAt   DateTime  @default(now()) // Campo nuevo
  updatedAt   DateTime  @updatedAt      // Campo nuevo
}